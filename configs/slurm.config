workDir = params.workdir

executor {
    name = "slurm"
    queueSize = 100
    //exitReadTimeout = "360 sec"
    //submitRateLimit = '1 / 2 s'
    //pollInterval = '30 sec'
}
            
process {   
    cache = "lenient"
    //errorStrategy = "retry"
    //maxRetries = 1

            withLabel: basics { cpus = 2; memory = '2 GB' ; conda = 'envs/basics.yaml' } 
            withLabel: bioruby { cpus = 2; memory = '2 GB' ; conda = 'envs/bioruby.yaml' } 
            withLabel: python3 { cpus = 2; memory = '2 GB' ; conda = 'envs/python_ribap.yaml' } 
            withLabel: prokka { cpus = 12; memory = '8 GB' ; conda = 'envs/prokka.yaml' }
            withLabel: roary { cpus = 16; memory = '16 GB' ; conda = 'envs/roary.yaml' }
            withLabel: mmseqs2 { cpus = 16; memory = '8 GB' ; conda = 'envs/mmseqs2.yaml' }
            withLabel: glpk { cpus = 1; memory = '2 GB' ; memory = params.memory;  conda = 'envs/glpk.yaml' }
            withLabel: mafft { cpus = 1; memory = '2 GB' ; conda = 'envs/mafft.yaml' }
            withLabel: fasttree { cpus = 1; memory = '2 GB' ; conda = 'envs/fasttree.yaml' }
            withLabel: newick_utils { cpus = 1; memory = '2 GB' ; conda = 'envs/newick_utils.yaml' }
            withLabel: raxml { cpus = 24; memory = '24 GB' ; conda = 'envs/raxml.yaml' }
            withLabel: upsetr { cpus = 1; memory = '16 GB'; conda = 'envs/upsetr.yaml' }
}
